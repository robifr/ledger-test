/**
 * Copyright 2024 Robi
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.robifr.ledger.data.model

import android.os.Parcelable
import androidx.room.ColumnInfo
import androidx.room.Entity
import androidx.room.Ignore
import androidx.room.PrimaryKey
import kotlinx.parcelize.Parcelize

/**
 * @param id Product unique ID. Set to null for the value to be auto-generated by Room. See
 *   [Model.modelId] For the reason of why it's boxed type.
 * @param name Product name.
 * @param price Product price.
 */
@JvmRecord
@Parcelize
@Entity(tableName = "product")
data class ProductModel(
    @PrimaryKey(autoGenerate = true) @ColumnInfo(name = "id") val id: Long? = null,
    @ColumnInfo(name = "name") val name: String,
    @ColumnInfo(name = "price") val price: Long = 0L
) : Model, Parcelable {
  @Ignore override fun modelId(): Long? = id

  @Ignore fun withId(id: Long?): ProductModel = copy(id = id)

  @Ignore fun withName(name: String): ProductModel = copy(name = name)

  @Ignore fun withPrice(price: Long): ProductModel = copy(price = price)

  companion object {
    @JvmStatic fun toBuilder(): NameBuild = Builder()
  }

  interface NameBuild {
    fun withName(name: String): ProductModel
  }

  private class Builder : NameBuild {
    override fun withName(name: String): ProductModel = ProductModel(name = name)
  }
}
